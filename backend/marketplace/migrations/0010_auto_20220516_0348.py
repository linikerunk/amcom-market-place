# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-26 11:05
from __future__ import unicode_literals
from unicodedata import name
from django.db import migrations
from faker import Faker

from marketplace.models.sale import Sale
from marketplace.models.product_activity import ProductActivity
from marketplace.models.sale_product_activity import SaleProductActivity
from user.models.client import Client
from user.models.seller import Seller

PRODUCT_ACTIVITY = [
    'Gillette (lâmina de barbear)',
    'Judô',
    'Miojo (macarrão instantâneo)',
    'Manutenção técnica',
    'Danone (iogurte)',
    'Bombril (esponja de aço)',
    'Zíper (fecho éclair)',
    'Leite Moça (leite condensado)',
    'Isopor (Poliestireno Expandido – EPS) ',
    'Cotonetes (hastes flexíveis) ',
    'Xerox (máquina de fotocópias) ',
    'Q-boa (água sanitária)',
    'Maizena (Amido de Milho) ',
    'Yakult (Leite Fermentado) ',
    'Pó Royal (Fermento Químico em Pó) ',
    'Nescau (achocolatado em pó) ',
    'Catupiry (Requeijão cremoso) ',
    'Caldo Knorr (Caldo de Galinha em Cubos) ',
    'Super Bonder (Cola Tudo) ',
    'Toddynho (Achocolatado Pronto) ',
]

def create_data(apps, schema_editor):
    fake = Faker()
    for _ in range(10):
        print(fake.name())
        Client.objects.create(name=fake.name())

    for _ in range(10, 20):
        print(fake.name())
        Seller.objects.create(name=fake.name())

    for index in range(10):
        client = Client.objects.filter(id=index + Client.objects.first().pk).first()
        seller = Seller.objects.filter(id=index + Client.objects.first().pk).first()
        Sale.objects.create(
            client_id=client.id,
            seller_id=seller.id,
            operation_date=fake.date_time(),
    )

    for index in range(20):
        ProductActivity.objects.create(
            name=PRODUCT_ACTIVITY[index],
            is_product=True if index % 2 else False,
            price=fake.random_number(digits=3, fix_len=True),
            commission=fake.randomize_nb_elements(number=10, ge=True, min=0),
            quantity=fake.randomize_nb_elements(number=50, ge=True, min=1)
        )

    for index in range(10):
        SaleProductActivity.objects.create(
            sale=Sale.objects.get(id=index + Client.objects.first().pk),
            product_activity=ProductActivity.objects.get(id=index + Client.objects.first().pk)
        )


class Migration(migrations.Migration):

    dependencies = [
        ('marketplace', '0009_alter_productactivity_commission'),
    ]

    operations = [
        migrations.RunPython(create_data),
    ]
